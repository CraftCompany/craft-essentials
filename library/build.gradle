apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply from: '../constants.gradle'

version = '1.0.0'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support:design:$support_library_version"
    implementation "com.android.support:cardview-v7:$support_library_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    api 'com.github.bumptech.glide:glide:4.1.1'
    api 'de.hdodenhof:circleimageview:2.1.0'
    testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.javadocDeps
    androidJavadocs.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
}
afterEvaluate {
    androidJavadocs.classpath += project.files(android.plugin.getRuntimeJarList().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

group = 'com.craft.libraries'

install {
    repositories.mavenInstaller {
        pom.project {
            name 'CraftEssentials'
            description 'A set of classes to reduce boilerplate for Android development.'
            url 'https://github.com/CraftCompany/craft-essentials'
            inceptionYear '2017'

            packaging 'aar'
            groupId group
            artifactId 'essentials'
            version version

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                }
            }
            scm {
                connection 'https://github.com/CraftCompany/craft-essentials.git'
                url 'https://github.com/CraftCompany/craft-essentials'

            }
            developers {
                developer {
                    id = 'TheCraftKid'
                    name 'Willie Chalmers III'
                }
            }
        }
    }
}

Properties bintrayProperties = new Properties()
bintrayProperties.load(project.rootProject.file('bintray.properties').newDataInputStream())

bintray {
    user = bintrayProperties.hasProperty('user') ?
            bintrayProperties.getProperty('user') : System.getenv('BINTRAY_USER')
    key = bintrayProperties.hasProperty('key') ?
            bintrayProperties.getProperty('key') : System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        userOrg = 'CraftCompany'
        repo = 'libraries'
        name = 'craft-essentials'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/CraftCompany/craft-essentials.git'
        publish = true
        version {
            name = version
            released = new Date()
            vcsTag = "v$version"
        }
    }
}